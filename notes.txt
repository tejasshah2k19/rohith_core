					java 

jdk									jre
java development kit						java runtime enviornment 
								
javac - compile 						jvm 	jit    classloader 
java -  execute 						java virtual machine 
javah  - header 						just in time 
jdb  -   java debugger 						
appletviewer - view applets 
javadoc  - documentation 
-------------------------------------------------------------------------------------------------------
programming language:-
		HL -> Eng -> user
		LL -> system -> 01010 
		ML -> HL + LL [ eng + 0101 ] 


pop  -> function 
oop  -> class ,object, inheritance ,encapsulation ,polymorphism ,

-------------------------------------------------------------------------------------------------------
c - pop
c++ - oop 
java - oop
ruby - oop 
python - oop 
-------------------------------------------------------------------------------------------------------
class  - blueprint -- logical - group -general   
object - physical -- special member ---real world -- PPT -->  person place thing 


TV -> class 
	MI LED 43" A123 
Dog -> class

DhirajSir ->
Laptop -> 


Iphone -> class 

Bike -> class 


Rohit -> object 

Gandhiji -> object 

-------------------------------------------------------------------------------------------------------
class ->  data members + member functions 
	   variables + methods

object -> used property of a class 
-------------------------------------------------------------------------------------------------------

having extension .java

class -> first char capital if we have two words in a class name then,
		 first char capital , second word's first char also in capital  
		 e.g 
		 	Employee 
			EmployeeSalary
			PermEmplSal 
			

Calc.java 

public class Calc {
	public static void main(String args[]){}
}

class A{
	public static void main(String args[]){}
}

class B{
	public static void main(String args[]){}
}

javac Calc.java 

3 class file 

1) Calc.class 
2) A.class 
3) B.class 

java Calc 
java A
java B 

---------------------------------------------------------------------------
A.java 

1) If you have public class in your java file than you must have to save 
   your source file with  same  name as class name. 

2) You can have n number of class in your 1 java file 

3) you can have public static void main(String args[]) in every class of your java file 

4) if you have 4 class in java source file , once we compile it will produce 4 different .class will created 
 
---------------------------------------------------------------------------
		  
packages :- 
		java 
			util
			io
			sql
			applet
			lang { String , System , Math } 
			.....
			
.java -> .class -> import java.lang.*; 
		
---------------------------------------------------------------------------
		
for -> counter control 

while --> non counter  
do..while 		 
		

1) entry control  loop
	for
	while 

2) exit control loop 
	do...while

	
---------------------------------------------------------------------------
static :- 
			
	if we declare any varibale at class level it known as instance variable.
	if we declare any variable inside the method than it is known as local variable. 
	if we declare any variable at class level with static keyword that it is known as static variable. 
	
	class Bank{
		int balance; // instance variable 
		static int branchCode; //	
		static void status(){
			
		}
	}
	
	//Bank ->  5 objects --> balance=>5  branchCode=>1 
	
	We don't required any object to invoke / call static property. 
	you can access static property using class name.
	we can also access static property using instance/object. 
	 
	
	System.out.println(Bank.branchCode);
	Bank.status();
	
	**you can not access any non static property in static method but you can access
	static property in non static property.
	
---------------------------------------------------------------------------
conditional statements:- 

	if 
	if else
	nested if 
	else if ladder 

---------------------------------------------------------------------------
	we need to design an app for indian gov. 
	india fight with corona , for gov we have to design an app 
	that used to identify correct user for vaccination 
	 
	output :- 
		Enter your name :-
		ram 
		Enter your Birth Year :-
		1989
		ram you are eligible for vaccination 
		[age =>  age > 45 ] 
		 
		
1) take two numbers from user , check num1 is divisible by num2
	e.g 
		enter two numbers 
		25
		5
		divisible
		
		
		enter two numbers 
		27
		5
		not divisible
---------------------------------------------------------------------------
		
App Name : Book My Show 

we need to design an app for bookMyShow that book tickets for the customer. 
customer need to signup first , in signup customer will provide first name and unique code for their 
unique identity. after signup user can buy tickets for a movie with various category.
diamond - 500 , silver - 250 , gold - 350 
user can buy one or more than one tickets.
user can check their booking status whenever they want using unique code. 

1. Signup and book tickets 
2. Check Your Booking Status 
3. exit 

classes ? 
BookMyShow 
	main()
Customer 
	int goldTickets;
	int silverTickets;
	int diamondTickets;
	
	int uniqCode; 
	String firstName;
	void signup();
	void booking();
	void myBookings();
	


		
---------------------------------------------------------------------------
how many types of data type in java?

1) primitive 
	byte 
	short 
	char 
	int 
	long 
	float 
	double  
	boolean
	
2) non-primitive 
	class 
	object 
	enum
	array 
---------------------------------------------------------------------------
constructor :- it's a special method which has same name as class name. 
			   it must not have any return type. 
			   it is used to initialize the instance variable [assignign value ].
			   We can't call constructor like a method it will call automatically when 
			   we create instance.  
			   you can call another constructor from constructor , but that instructions 
			   must be written on the first line of constructor. 
			   for that you can use this[same class] and super*[parent class]* keyword.  
			   
			   
1) implicit 
	> no argument / default  
2) explicit 
	> no argument
	> parameterized constructor 
			
---------------------------------------------------------------------------
Employee Management :- 

	Royal Technosoft wants salary payout using auto calculation app.
	we need to design an application that calculate salary for all employees. 
	we have two types of employee , 1) part time 2) full time 	
	both will get salary but full time employee can take salary on monthly basis 
	and part time employee will get salary on hourly work basis. 
	all employee have their unique employeeId , firstName and their cityName. 
	
	variables? 
	methods? 	
---------------------------------------------------------------------------
 array :-   int a; // single value 
 		   a=90;
 		   a=900; // 900 
 		  10 values in single variable a -> array 
 		  
 		  array is a collection of same type of data.
 		  a=> 10 size --> 	
		  print -> a 
		  we can access array using index and index starts with 0 and ends with size-1
		  index is known as subscript 
	
---------------------------------------------------------------------------
1) print and scan array of 1D 
2) sum of all elements from 1D
3) sum of odd and even elements from 1D 
4) search number from 1D
	o/p  11 22 33 55 66 
	search?
	69
	69 not found 
	
	o/p  11 22 33 55 33 
	search?
	33
	33 found at 3rd position 
	
	or-> 33 found 2 time
	
5) count how many odd and how many even numbers present in 1D array 
a => 10 23 33 40 50 	 
	output=> 
	odd => 2 
	even => 3 
---------------------------------------------------------------------------
2D-> matrix -> 	row col 

Row Column --> index 


	5	6	7
	8	9	1
	2	3	4
	
-----------------------------------------------------------------------------	
1D => 1) take 5 numbers from user and store into array ,	
		1.1)  find out all prime numbers from it 
			  a =>  22 55 37 77 66 
			  prime =>   37 
		1.2)  replace -1 with all numbers which can divide by 5 or 9 
		  		a =>  22 55 37 77 66 
				a =>  22 -1 37 77 66 
				
		1.3) reverse array elements 
		  		a =>  22 55 37 77 66 
				a => 66 77 37 55 22 

2D => create 1 3*3 array , data must be taken from user 
					 1 2 3 
  			 		 4 5 6 
					 7 8 9 
		2.1) print sum of all corners => 1 + 3 + 7 + 9 =  20  
		2.2) print sum of all columns => 1+4+7 => 12 2+5+8 => 15 3+6+9 => 18 
		2.3) find max numbers from it => 9 
-------------------------------------------------------------------
jagged array:-	row are fix , columns are dynamic 
		
	int a[][] = new int[3][] ; //row => 3 , col = ?
	
	row 
	0 => a[0] = new int[5]; 
	1    a[1] = new int[3]; 
	2    a[2] = new int[2]; 
	
	0=> 0 1 2 3 4 
	1=> 0 1 2 
	2=> 0 1 
-------------------------------------------------------------------
String :-  it's a class in java 
		   it is inside in java.lang package so we dont need to import it
		   
		   we will use String class to store multiple characters 
		   
		   String data can be access via index and index starts with 0 and ends with lenght-1 
		   		
1) take 1 string from user and search royal is present in that string or not 
2) take 1 string from user and count how many spaces present in string 
3) take 1 string from user and count how many vowels are present in string 
-------------------------------------------------------------------
String -> StringBuffer | StringBuilder 
String is immutable 
StringBuffer -> sync
StringBuilder -> non-sync  
-------------------------------------------------------------------
4) take string from user and check it's palindrome or not 
5) rohith -> rohhith [ insert ]  	
	x.insert(3,"h"); 
	
6) RoyyalEddu -> remove y and d 
				x.remove(2,3); //2
				x.remove(2,5); //2-3-4
7) encryption ->
			you have to make program that have two methods encrypt and decrypt.
			take string from user encrypt it. 
			and decrypt it. 
			
			x =  royal123 
			encrypt(x) => axAxAxAx123axaxcc
			 
			decrypt(axAxAxAx123axaxcc) => royal123 
			
			x=royal 
			encX => spzbm [ +1 ] 
			decX => royal [ -1 ] 
			
-------------------------------------------------------------------
			
			String str = "royal"; 
			StringBuffer sb = new StringBuffer(str);
			//royal
			//soyal
			
			sb 
			
			
			
			
			
			
-------------------------------------------------------------------



	
	
	
		
		
					 
			
					 











	 
	
	
	  
		
	
	
	
	









				 












 












  


	

 






